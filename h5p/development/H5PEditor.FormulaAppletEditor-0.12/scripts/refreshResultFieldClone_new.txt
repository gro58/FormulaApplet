function refreshResultFieldClone(latex, fApp) {
  console.log("refreshResultFieldClone");
  latex = latex.replaceAll(H5Pbridge.config.unit_replacement, '\\unit{');
  var parts = H5Pbridge.separateInputfield(latex);
  var tex = parts.before + '{{result}}' + parts.after;
  var enc = H5Pbridge.encode(parts.tag);
  console.log(tex + ' enc=' + enc + ' -> ' + H5Pbridge.decode(enc));

  // H5P editor: send tex to formulaapplet-editor using dispatchEvent
  if (isH5P()) {
    var texinput = $('div.field.field-name-TEX_expression.text input')[0];
    if (typeof texinput !== 'undefined') {
      fApp.solution = parts.tag; //not encoded; used by formulaapplet-editor
      // value of TEX_expression field is set to EditorResult
      texinput.value = tex;
      // trigger InputEvent. EventListener: updateTexinputEventHandler see formulaapplet-editor.js
      texinput.dispatchEvent(new InputEvent('input', {
        bubbles: true
      }))
    }
  }
  // getHTML
  var html = '<p class="formula_applet" id="' + fApp.id;
  if (fApp.hasSolution) {
    html += '" data-b64="' + enc;
  }
  if (fApp.unitAuto) {
    html += '" mode="physics';
  }
  html += '">' + tex + '</p>';
  console.log(html);
  var out = H5P.jQuery('textarea#html_output');
  if (typeof out !== 'undefined') {
    out.text(html);
  }
}
